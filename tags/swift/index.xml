<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Swift on 番茄🍅杂货铺</title>
    <link>https://blog.tomatostore.top/tags/swift/</link>
    <description>Recent content in Swift on 番茄🍅杂货铺</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Mon, 21 Aug 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.tomatostore.top/tags/swift/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>iOS开发-加载其他语言的String资源</title>
      <link>https://blog.tomatostore.top/posts/2023/11/ios-localized-string-in-diff-languages/</link>
      <pubDate>Mon, 21 Aug 2023 00:00:00 +0000</pubDate>
      
      <guid>https://blog.tomatostore.top/posts/2023/11/ios-localized-string-in-diff-languages/</guid>
      <description>Load Settings.bundle in diff languages</description>
      <content:encoded><![CDATA[<p>在开发iOS应用时，我们可能会遇到需要使用不同语言的字符串资源的情况。比如，当iOS的语言设置为A，而我们的应用需要使用语言B。
这里有一个语音计算器，用户可以在计算时选择不同的语音朗读语言，而无需改变整个iOS的语言设置。例如，如果我们的手机语言设置为英语，但我们希望计算器能用中文朗读计算结果。</p>
<a href="https://apps.apple.com/cn/app/id1501166219">
  <img src="/images/calculator-settings.jpg" align="center" style="width: 80%; height: 80%;"/>
</a>
<p>为了实现这个功能，我们可以使用iOS的本地化机制。有两种常见的解决方案：</p>
<ol>
<li><strong>加载相应语言的资源文件</strong></li>
</ol>
<p>我们可以为每种语言创建一个资源文件，并在其中添加我们的本地化字符串。然后，我们可以根据用户选择的语言，从相应的资源文件中加载字符串。</p>
<p>在Swift中，我们可以使用如下方式实现：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-swift" data-lang="swift"><span class="line"><span class="cl"><span class="kd">extension</span> <span class="nc">String</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="kd">var</span> <span class="nv">localized</span><span class="p">:</span> <span class="nb">String</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="c1">// TalkingNumCalUserDefaults.voiceLang has value like &#39;en-US&#39;, &#39;fr-FR&#39;, &#39;de-DE&#39; etc.</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="kd">let</span> <span class="nv">lang</span> <span class="p">=</span> <span class="n">Locale</span><span class="p">(</span><span class="n">identifier</span><span class="p">:</span> <span class="n">TalkingNumCalUserDefaults</span><span class="p">.</span><span class="n">voiceLang</span><span class="p">).</span><span class="n">languageCode</span> <span class="p">{</span> <span class="c1">// e.g. en, jp, zh ...</span>
</span></span><span class="line"><span class="cl">            <span class="k">if</span> <span class="kd">let</span> <span class="nv">path</span> <span class="p">=</span> <span class="n">Bundle</span><span class="p">.</span><span class="n">main</span><span class="p">.</span><span class="n">path</span><span class="p">(</span><span class="n">forResource</span><span class="p">:</span> <span class="n">lang</span><span class="p">,</span> <span class="n">ofType</span><span class="p">:</span> <span class="s">&#34;lproj&#34;</span><span class="p">),</span> <span class="kd">let</span> <span class="nv">bundle</span> <span class="p">=</span> <span class="n">Bundle</span><span class="p">(</span><span class="n">path</span><span class="p">:</span> <span class="n">path</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                <span class="kd">let</span> <span class="nv">string</span> <span class="p">=</span> <span class="n">bundle</span><span class="p">.</span><span class="n">localizedString</span><span class="p">(</span><span class="n">forKey</span><span class="p">:</span> <span class="kc">self</span><span class="p">,</span> <span class="n">value</span><span class="p">:</span> <span class="kc">nil</span><span class="p">,</span> <span class="n">table</span><span class="p">:</span> <span class="kc">nil</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">                <span class="k">return</span> <span class="n">string</span>
</span></span><span class="line"><span class="cl">            <span class="p">}</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="n">NSLocalizedString</span><span class="p">(</span><span class="kc">self</span><span class="p">,</span> <span class="n">comment</span><span class="p">:</span> <span class="s">&#34;&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>这个解决方案需要我们预先准备好所有可能用到的语言的资源文件。当用户选择了一种语言后，我们从对应的资源文件中加载字符串。如果没有找到对应的资源文件，我们就返回一个未本地化的字符串。</p>
<ol start="2">
<li><strong>设置Bundle的语言</strong></li>
</ol>
<p>我们可以先通过用户选择的语言设置Bundle的语言，然后直接从Bundle中获取本地化的字符串。</p>
<p>在Swift中，我们可以使用如下方式实现：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span><span class="lnt">9
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-swift" data-lang="swift"><span class="line"><span class="cl"><span class="kd">extension</span> <span class="nc">String</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="kd">var</span> <span class="nv">localized</span><span class="p">:</span> <span class="nb">String</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="c1">// TalkingNumCalUserDefaults.voiceLang has value like &#39;en-US&#39;, &#39;fr-FR&#39;, &#39;de-DE&#39; etc.</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="kd">let</span> <span class="nv">lang</span> <span class="p">=</span> <span class="n">Locale</span><span class="p">(</span><span class="n">identifier</span><span class="p">:</span> <span class="n">TalkingNumCalUserDefaults</span><span class="p">.</span><span class="n">voiceLang</span><span class="p">).</span><span class="n">languageCode</span> <span class="p">{</span> <span class="c1">// e.g. en, jp, zh ...</span>
</span></span><span class="line"><span class="cl">            <span class="n">Bundle</span><span class="p">.</span><span class="n">setLanguage</span><span class="p">(</span><span class="n">lang</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="n">NSLocalizedString</span><span class="p">(</span><span class="kc">self</span><span class="p">,</span> <span class="n">tableName</span><span class="p">:</span> <span class="kc">nil</span><span class="p">,</span> <span class="n">bundle</span><span class="p">:</span> <span class="n">Bundle</span><span class="p">.</span><span class="n">main</span><span class="p">,</span> <span class="n">value</span><span class="p">:</span> <span class="s">&#34;&#34;</span><span class="p">,</span> <span class="n">comment</span><span class="p">:</span> <span class="s">&#34;&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>这个解决方案需要我们在每次用户选择一种新的语言时，都重新设置一次Bundle的语言。然后，我们从Bundle中获取本地化的字符串。如果没有找到对应的字符串，我们就返回一个未本地化的字符串。</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>ChatGPT AI 协助 iOS 开发: customized sheet</title>
      <link>https://blog.tomatostore.top/posts/2023/07/swift-shared-customize-sheet/</link>
      <pubDate>Wed, 12 Jul 2023 00:00:00 +0000</pubDate>
      
      <guid>https://blog.tomatostore.top/posts/2023/07/swift-shared-customize-sheet/</guid>
      <description>程序员走在被 OpenAI 取代的路上</description>
      <content:encoded><![CDATA[<h2 id="需求">需求</h2>
<p>App 中想加入一个订阅页面，期望 iOS 上按 bottom sheet 展示，iPad 上居中显示，同时支持横屏和竖屏，效果如下：</p>
<p><img loading="lazy" src="/images/iphone-subscription.png" alt="subscription in iPhone"  />
<img loading="lazy" src="/images/ipad-subsciption.png" alt="subscription in iPad"  /></p>
<p>iOS 15 提供了 <code>UISheetPresentationController</code> 可以令 Bottom Sheet 更方便，具体可参考<a href="https://sarunw.com/posts/bottom-sheet-in-ios-15-with-uisheetpresentationcontroller/">How to present a Bottom Sheet in iOS 15</a>还有<a href="https://www.avanderlee.com/swift/presenting-sheets-uikit-uisheetpresentationcontroller/">Presenting sheets with UIKit using a UISheetPresentationController</a>。</p>
<p><code>UISheetPresentationController</code> 不满足需求因为它只有 <code>medium</code> 和 <code>large</code> 两种高度，并且宽度是满屏，不符合需求。
通过 <code>OpenAI</code> 问答，找到了可以满足需求的方法来在一个页面中弹出订阅页面。</p>
<p>然后不出意外的，新问题又出现了：想要在另外一个页面中也弹出同样的订阅页面，当时这两个页面的父类是不同 <code>UIViewController</code>，也就是说没办法给他们定义一个共同的定制化的 <code>UIViewController</code>  子类，而 <code>Swift</code> 又不支持多继承，尝试了带默认实现的 <code>Protocol</code>，无法实现。最终还是通过询问 <code>AI</code> 找到了实现方法：</p>
<p><img loading="lazy" src="/images/chatgpt-swift-question.png" alt="dns analysis"  /></p>
<h2 id="最终实现">最终实现：</h2>
<ul>
<li><code>SubscriptionSheetPresenter.swift</code></li>
</ul>
<p>共享的 presenter</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-swift" data-lang="swift"><span class="line"><span class="cl"><span class="kd">class</span> <span class="nc">SubscriptionSheetPresenter</span><span class="p">:</span> <span class="n">NSObject</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="kd">static</span> <span class="kd">let</span> <span class="nv">instance</span> <span class="p">=</span> <span class="n">SubscriptionSheetPresenter</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="kd">func</span> <span class="nf">presentBottomSheetForSubscription</span><span class="p">(</span><span class="n">from</span> <span class="n">vc</span><span class="p">:</span> <span class="n">UIViewController</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="c1">// storyboard 中定义了定制页面的布局</span>
</span></span><span class="line"><span class="cl">        <span class="kd">let</span> <span class="nv">dashboard</span> <span class="p">=</span> <span class="n">UIStoryboard</span><span class="p">.</span><span class="kd">init</span><span class="p">(</span><span class="n">name</span><span class="p">:</span> <span class="s">&#34;Main&#34;</span><span class="p">,</span> <span class="n">bundle</span><span class="p">:</span> <span class="kc">nil</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="k">guard</span> <span class="kd">let</span> <span class="nv">subscriptionVC</span> <span class="p">=</span> <span class="n">dashboard</span><span class="p">.</span><span class="n">instantiateViewController</span><span class="p">(</span><span class="n">withIdentifier</span><span class="p">:</span> <span class="s">&#34;subscriptionViewController&#34;</span><span class="p">)</span> <span class="k">as</span><span class="p">?</span> <span class="n">SubscriptionViewController</span> <span class="k">else</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="k">return</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">        <span class="n">subscriptionVC</span><span class="p">.</span><span class="n">modalPresentationStyle</span> <span class="p">=</span> <span class="p">.</span><span class="n">custom</span>
</span></span><span class="line"><span class="cl">        <span class="n">subscriptionVC</span><span class="p">.</span><span class="n">transitioningDelegate</span> <span class="p">=</span> <span class="kc">self</span>
</span></span><span class="line"><span class="cl">        <span class="n">vc</span><span class="p">.</span><span class="n">present</span><span class="p">(</span><span class="n">subscriptionVC</span><span class="p">,</span> <span class="n">animated</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span> <span class="n">completion</span><span class="p">:</span> <span class="kc">nil</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">// </span><span class="cs">MARK:</span><span class="c1"> - Bottom Sheet for Subscription</span>
</span></span><span class="line"><span class="cl"><span class="kd">extension</span> <span class="nc">SubscriptionSheetPresenter</span><span class="p">:</span> <span class="n">UIViewControllerTransitioningDelegate</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="kd">func</span> <span class="nf">presentationController</span><span class="p">(</span><span class="n">forPresented</span> <span class="n">presented</span><span class="p">:</span> <span class="n">UIViewController</span><span class="p">,</span> <span class="n">presenting</span><span class="p">:</span> <span class="n">UIViewController</span><span class="p">?,</span> <span class="n">source</span><span class="p">:</span> <span class="n">UIViewController</span><span class="p">)</span> <span class="p">-&gt;</span> <span class="n">UIPresentationController</span><span class="p">?</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="n">SubscriptionSheetPresentationController</span><span class="p">(</span><span class="n">presentedViewController</span><span class="p">:</span> <span class="n">presented</span><span class="p">,</span> <span class="n">presenting</span><span class="p">:</span> <span class="n">presenting</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><ul>
<li><code>SubscriptionViewController.swift</code></li>
</ul>
<p>Storyboard 中订阅页面的 UIViewController class:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-swift" data-lang="swift"><span class="line"><span class="cl"><span class="kd">class</span> <span class="nc">SubscriptionViewController</span><span class="p">:</span> <span class="n">UIViewController</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="kr">@IBOutlet</span> <span class="kr">weak</span> <span class="kd">var</span> <span class="nv">monthlyBuy</span><span class="p">:</span> <span class="n">UIButton</span><span class="p">!</span>
</span></span><span class="line"><span class="cl">    <span class="kr">@IBOutlet</span> <span class="kr">weak</span> <span class="kd">var</span> <span class="nv">yearlyBuy</span><span class="p">:</span> <span class="n">UIButton</span><span class="p">!</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="kr">override</span> <span class="kd">func</span> <span class="nf">viewWillLayoutSubviews</span><span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="kc">super</span><span class="p">.</span><span class="n">viewWillLayoutSubviews</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">        <span class="n">updateUI</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="kr">override</span> <span class="kd">func</span> <span class="nf">viewWillTransition</span><span class="p">(</span><span class="n">to</span> <span class="n">size</span><span class="p">:</span> <span class="n">CGSize</span><span class="p">,</span> <span class="n">with</span> <span class="n">coordinator</span><span class="p">:</span> <span class="n">UIViewControllerTransitionCoordinator</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="kc">super</span><span class="p">.</span><span class="n">viewWillTransition</span><span class="p">(</span><span class="n">to</span><span class="p">:</span> <span class="n">size</span><span class="p">,</span> <span class="n">with</span><span class="p">:</span> <span class="n">coordinator</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="n">updateUI</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="kd">private</span> <span class="kd">func</span> <span class="nf">updateUI</span><span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="c1">// update layour for diff device (iPhone/iPad) and view (Landscape/Protraint)</span>
</span></span><span class="line"><span class="cl">        <span class="c1">// ...</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><ul>
<li><code>SubscriptionSheetPresentationController.swift</code></li>
</ul>
<p>定制订阅页面的宽度和高度</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-swift" data-lang="swift"><span class="line"><span class="cl"><span class="kd">class</span> <span class="nc">SubscriptionSheetPresentationController</span><span class="p">:</span> <span class="n">UIPresentationController</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="kr">override</span> <span class="kd">var</span> <span class="nv">frameOfPresentedViewInContainerView</span><span class="p">:</span> <span class="n">CGRect</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="kd">let</span> <span class="nv">screenWidth</span> <span class="p">=</span> <span class="n">UIScreen</span><span class="p">.</span><span class="n">main</span><span class="p">.</span><span class="n">bounds</span><span class="p">.</span><span class="n">width</span>
</span></span><span class="line"><span class="cl">        <span class="kd">let</span> <span class="nv">screenHeight</span> <span class="p">=</span> <span class="n">UIScreen</span><span class="p">.</span><span class="n">main</span><span class="p">.</span><span class="n">bounds</span><span class="p">.</span><span class="n">height</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">         <span class="c1">// default is iPhone+portrait for non-SE</span>
</span></span><span class="line"><span class="cl">        <span class="kd">var</span> <span class="nv">width</span><span class="p">:</span> <span class="n">CGFloat</span> <span class="p">=</span> <span class="n">screenWidth</span>
</span></span><span class="line"><span class="cl">        <span class="kd">var</span> <span class="nv">height</span><span class="p">:</span> <span class="n">CGFloat</span> <span class="p">=</span> <span class="n">screenHeight</span> <span class="o">*</span> <span class="mi">2</span><span class="o">/</span><span class="mi">3</span>
</span></span><span class="line"><span class="cl">        <span class="kd">var</span> <span class="nv">x</span><span class="p">:</span> <span class="n">CGFloat</span> <span class="p">=</span> <span class="mi">0</span>
</span></span><span class="line"><span class="cl">        <span class="kd">var</span> <span class="nv">yOffset</span> <span class="p">=</span> <span class="mf">1.0</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="n">UIDevice</span><span class="p">.</span><span class="n">current</span><span class="p">.</span><span class="n">userInterfaceIdiom</span> <span class="p">==</span> <span class="p">.</span><span class="n">phone</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="k">if</span> <span class="n">UIDevice</span><span class="p">.</span><span class="n">current</span><span class="p">.</span><span class="n">orientation</span><span class="p">.</span><span class="n">isLandscape</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                <span class="n">width</span> <span class="p">=</span> <span class="n">screenWidth</span> <span class="o">/</span> <span class="mi">2</span>
</span></span><span class="line"><span class="cl">                <span class="n">height</span> <span class="p">=</span> <span class="n">screenHeight</span> <span class="o">*</span> <span class="mf">0.95</span>
</span></span><span class="line"><span class="cl">            <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                <span class="k">if</span> <span class="n">screenHeight</span> <span class="o">&lt;</span> <span class="mi">700</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                    <span class="n">height</span> <span class="p">=</span> <span class="n">screenHeight</span> <span class="o">*</span> <span class="mf">2.5</span><span class="o">/</span><span class="mi">3</span>
</span></span><span class="line"><span class="cl">                <span class="p">}</span>
</span></span><span class="line"><span class="cl">            <span class="p">}</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span> <span class="k">else</span> <span class="p">{</span> <span class="c1">// iPad or Mac</span>
</span></span><span class="line"><span class="cl">            <span class="k">if</span> <span class="n">UIDevice</span><span class="p">.</span><span class="n">current</span><span class="p">.</span><span class="n">orientation</span><span class="p">.</span><span class="n">isLandscape</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                <span class="n">width</span> <span class="p">=</span> <span class="n">screenWidth</span> <span class="o">/</span> <span class="mf">2.5</span>
</span></span><span class="line"><span class="cl">                <span class="n">height</span> <span class="p">=</span> <span class="n">screenHeight</span> <span class="o">*</span> <span class="mf">0.65</span>
</span></span><span class="line"><span class="cl">            <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                <span class="n">width</span> <span class="p">=</span> <span class="n">screenWidth</span> <span class="o">/</span> <span class="mf">1.8</span>
</span></span><span class="line"><span class="cl">                <span class="n">height</span> <span class="p">=</span> <span class="n">screenHeight</span> <span class="o">*</span> <span class="mf">0.5</span>
</span></span><span class="line"><span class="cl">            <span class="p">}</span>
</span></span><span class="line"><span class="cl">            <span class="n">yOffset</span> <span class="p">=</span> <span class="mf">0.5</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="n">x</span> <span class="p">=</span> <span class="p">(</span><span class="n">screenWidth</span> <span class="o">-</span> <span class="n">width</span><span class="p">)</span><span class="o">/</span><span class="mi">2</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="n">CGRect</span><span class="p">(</span><span class="n">x</span><span class="p">:</span> <span class="n">x</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                      <span class="n">y</span><span class="p">:</span> <span class="p">(</span><span class="n">containerView</span><span class="p">.</span><span class="n">bounds</span><span class="p">.</span><span class="n">height</span> <span class="o">-</span> <span class="n">height</span><span class="p">)</span> <span class="o">*</span> <span class="n">yOffset</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                      <span class="n">width</span><span class="p">:</span> <span class="n">width</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                      <span class="n">height</span><span class="p">:</span> <span class="n">height</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="kr">override</span> <span class="kd">func</span> <span class="nf">containerViewWillLayoutSubviews</span><span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="kc">super</span><span class="p">.</span><span class="n">containerViewWillLayoutSubviews</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="kd">let</span> <span class="nv">presentedView</span> <span class="p">=</span> <span class="n">presentedView</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="n">presentedView</span><span class="p">.</span><span class="n">frame</span> <span class="p">=</span> <span class="n">frameOfPresentedViewInContainerView</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>在需要弹出订阅页面的 <code>UIViewController</code> 中直接调用即可：</p>
<ul>
<li><code>&lt;Any&gt;ViewController.swift</code></li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-swift" data-lang="swift"><span class="line"><span class="cl"><span class="kd">class</span> <span class="p">&lt;</span><span class="nb">Any</span><span class="p">&gt;</span><span class="n">ViewController</span><span class="p">:</span> <span class="p">&lt;</span><span class="n">XXX</span><span class="p">&gt;</span><span class="n">ViewController</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="kd">func</span> <span class="nf">showSubscription</span><span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="n">SubscriptionSheetPresenter</span><span class="p">.</span><span class="n">instance</span><span class="p">.</span><span class="n">presentBottomSheetForSubscription</span><span class="p">(</span><span class="n">from</span><span class="p">:</span> <span class="kc">self</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><ul>
<li><code>&lt;Another&gt;ViewController.swift</code></li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-swift" data-lang="swift"><span class="line"><span class="cl"><span class="kd">class</span> <span class="p">&lt;</span><span class="n">Anyother</span><span class="p">&gt;</span><span class="n">ViewController</span><span class="p">:</span> <span class="p">&lt;</span><span class="n">YYY</span><span class="p">&gt;</span><span class="n">ViewController</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="kd">func</span> <span class="nf">goPremium</span><span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="n">SubscriptionSheetPresenter</span><span class="p">.</span><span class="n">instance</span><span class="p">.</span><span class="n">presentBottomSheetForSubscription</span><span class="p">(</span><span class="n">from</span><span class="p">:</span> <span class="kc">self</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="usefull-links">Usefull links</h2>
<ul>
<li><a href="https://blog.tomatostore.top/posts/2023/04/swift-block-based-animation/">Swift: beginAnimations(_:context:) was deprecated in iOS 13.0: Use the block-based animation API instead
</a></li>
<li><a href="https://blog.tomatostore.top/posts/2023/04/swift-substring/">Swift String Substring
</a></li>
</ul>
]]></content:encoded>
    </item>
    
    <item>
      <title>Swift String Substring</title>
      <link>https://blog.tomatostore.top/posts/2023/04/swift-substring/</link>
      <pubDate>Sun, 16 Apr 2023 00:00:00 +0000</pubDate>
      
      <guid>https://blog.tomatostore.top/posts/2023/04/swift-substring/</guid>
      <description>Swift 中对 String 类型的 substring() 方法都被标记为不推荐(deprecated)了，那该如何实现 substring 的功能呢？ 根据Xcode的提示可以使用slicing（切片）的</description>
      <content:encoded><![CDATA[<p>Swift 中对 <code>String</code> 类型的 <code>substring()</code> 方法都被标记为<code>不推荐(deprecated)</code>了，那该如何实现 substring 的功能呢？</p>
<p><img loading="lazy" src="/images/swift-string-substring-deprecated.jpg" alt="substring is deprecated"  title="XCode 中对String.substring的提示"  /></p>
<p>根据Xcode的提示<strong>可以使用<code>slicing（切片）</code>的方式来实现<code>substring</code>的功能</strong>：</p>
<p>以字符串 <code>let str = &quot;0123456789&quot;</code> 为例:</p>
<h3 id="从开始到第一个等于5的字符之前的子串">从开始到第一个等于<code>5</code>的字符之前的子串：</h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-swift" data-lang="swift"><span class="line"><span class="cl"><span class="k">if</span> <span class="kd">let</span> <span class="nv">firstFive</span> <span class="p">=</span> <span class="n">str</span><span class="p">.</span><span class="n">firstIndex</span><span class="p">(</span><span class="n">of</span><span class="p">:</span> <span class="s">&#34;5&#34;</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="kd">let</span> <span class="nv">substr</span> <span class="p">=</span> <span class="n">str</span><span class="p">[</span><span class="n">str</span><span class="p">.</span><span class="n">startIndex</span><span class="p">..&lt;</span><span class="n">firstFive</span><span class="p">]</span> <span class="c1">// substr = 01234</span>
</span></span><span class="line"><span class="cl">    <span class="c1">// 或者可以省略开始的index</span>
</span></span><span class="line"><span class="cl">    <span class="kd">let</span> <span class="nv">substr2</span> <span class="p">=</span> <span class="n">str</span><span class="p">[..&lt;</span><span class="n">firstFive</span><span class="p">]</span> <span class="c1">// substr2 = 01234</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="从开头到第一个等于5的字符">从开头到第一个等于<code>5</code>的字符</h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-swift" data-lang="swift"><span class="line"><span class="cl"><span class="kd">let</span> <span class="nv">substr</span> <span class="p">=</span> <span class="n">str</span><span class="p">[...</span><span class="n">firstFive</span><span class="p">]</span> <span class="c1">// substr = 012345</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="从第一个5开始到字符串末尾">从第一个<code>5</code>开始到字符串末尾</h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-swift" data-lang="swift"><span class="line"><span class="cl"><span class="kd">let</span> <span class="nv">substr</span> <span class="p">=</span> <span class="n">str</span><span class="p">[</span><span class="n">firstFive</span><span class="p">...]</span> <span class="c1">// 56789</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="前7个字符">前7个字符</h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-swift" data-lang="swift"><span class="line"><span class="cl"><span class="kd">let</span> <span class="nv">strstr</span> <span class="p">=</span> <span class="n">str</span><span class="p">[</span><span class="n">str</span><span class="p">.</span><span class="n">startIndex</span><span class="p">..&lt;</span><span class="n">str</span><span class="p">.</span><span class="n">index</span><span class="p">(</span><span class="n">str</span><span class="p">.</span><span class="n">startIndex</span><span class="p">,</span> <span class="n">offsetBy</span><span class="p">:</span> <span class="mi">7</span><span class="p">)]</span> <span class="c1">// 0123456</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p><code>String</code>切片后返回的结果类型是 <code>Substring</code>。</p>
<h2 id="struct-substring">struct Substring</h2>
<p><code>Substring</code> 不会为字符串额外分配空间，而是与原始字符串共享存储。</p>
<blockquote>
<p><strong>划重点：</strong> 因为<code>Substring</code>会持有对原始字符存储的引用计数，所以要确保子串的生命周期不长于源字符串的生命周期，以免内存泄漏。</p>
</blockquote>
<hr>
<blockquote>
<p>Ref: <a href="https://swiftunboxed.com/stdlib/substrings">https://swiftunboxed.com/stdlib/substrings</a></p>
</blockquote>
]]></content:encoded>
    </item>
    
    <item>
      <title>Swift: beginAnimations(_:context:) was deprecated in iOS 13.0: Use the block-based animation API instead</title>
      <link>https://blog.tomatostore.top/posts/2023/04/swift-block-based-animation/</link>
      <pubDate>Sun, 02 Apr 2023 00:00:00 +0000</pubDate>
      
      <guid>https://blog.tomatostore.top/posts/2023/04/swift-block-based-animation/</guid>
      <description>Swift / Objective-C block-based animation</description>
      <content:encoded><![CDATA[<p>用 <code>Xcode 14.2</code> 升级一个 <code>Swift</code> 项目时有编译警告️⚠提示 <code>beginAnimations()</code> 在 <code>iOS 13.0</code> 后已经不推荐使用，应该用 <code>block-based animation</code> 代替。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="hl"><span class="lnt">1
</span></span><span class="hl"><span class="lnt">2
</span></span><span class="hl"><span class="lnt">3
</span></span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-swift" data-lang="swift"><span class="line hl"><span class="cl"><span class="n">UIView</span><span class="p">.</span><span class="n">beginAnimations</span><span class="p">(</span><span class="kc">nil</span><span class="p">,</span> <span class="n">context</span><span class="p">:</span> <span class="kc">nil</span><span class="p">)</span> <span class="c1">// &#39;beginAnimations(_:context:)&#39; was deprecated in iOS 13.0: Use the block-based animation API instead</span>
</span></span><span class="line hl"><span class="cl"><span class="n">UIView</span><span class="p">.</span><span class="n">setAnimationDuration</span><span class="p">(</span><span class="mf">0.5</span><span class="p">)</span> <span class="c1">// &#39;setAnimationDuration&#39; was deprecated in iOS 13.0: Use the block-based animation API instead</span>
</span></span><span class="line hl"><span class="cl"><span class="n">UIView</span><span class="p">.</span><span class="n">commitAnimations</span><span class="p">()</span> <span class="c1">// &#39;commitAnimations()&#39; was deprecated in iOS 13.0: Use the block-based animation API instead </span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">currentOverlay</span> <span class="p">=</span> <span class="n">overlay</span>
</span></span><span class="line"><span class="cl"><span class="n">currentOverlayTarget</span> <span class="p">=</span> <span class="n">overlayTarget</span>
</span></span><span class="line"><span class="cl"><span class="n">currentLoadingText</span> <span class="p">=</span> <span class="n">loadingText</span></span></span></code></pre></td></tr></table>
</div>
</div>
<p>修改为使用 <code>Block-based animation</code> 的代码：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-swift" data-lang="swift"><span class="line"><span class="cl"><span class="n">UIView</span><span class="p">.</span><span class="n">animate</span><span class="p">(</span><span class="n">withDuration</span><span class="p">:</span> <span class="mf">0.5</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">currentOverlay</span> <span class="p">=</span> <span class="n">overlay</span>
</span></span><span class="line"><span class="cl">    <span class="n">currentOverlayTarget</span> <span class="p">=</span> <span class="n">overlayTarget</span>
</span></span><span class="line"><span class="cl">    <span class="n">currentLoadingText</span> <span class="p">=</span> <span class="n">loadingText</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>如果用 <code>Objective-C</code> 则修改如下：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-objc" data-lang="objc"><span class="line"><span class="cl"><span class="p">[</span><span class="n">UIView</span> <span class="nl">animateWithDuration</span><span class="p">:</span> <span class="mf">0.5</span>
</span></span><span class="line"><span class="cl">                 <span class="nl">animations</span><span class="p">:</span> <span class="o">^</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">currentOverlay</span> <span class="o">=</span> <span class="n">overlay</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">currentOverlayTarget</span> <span class="o">=</span> <span class="n">overlayTarget</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">currentLoadingText</span> <span class="o">=</span> <span class="n">loadingText</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}];</span>
</span></span></code></pre></td></tr></table>
</div>
</div>]]></content:encoded>
    </item>
    
  </channel>
</rss>
