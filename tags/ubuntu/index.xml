<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Ubuntu on Áï™ËåÑüçÖÊùÇË¥ßÈì∫</title>
    <link>https://blog.tomatostore.top/tags/ubuntu/</link>
    <description>Recent content in Ubuntu on Áï™ËåÑüçÖÊùÇË¥ßÈì∫</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Tue, 21 May 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.tomatostore.top/tags/ubuntu/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Install docker in Ubuntu 20 and config network proxy</title>
      <link>https://blog.tomatostore.top/posts/2024/05/install-docker-on-ubuntu-20/</link>
      <pubDate>Tue, 21 May 2024 00:00:00 +0000</pubDate>
      
      <guid>https://blog.tomatostore.top/posts/2024/05/install-docker-on-ubuntu-20/</guid>
      <description>Âú®Ubuntu 20‰∏≠ÂÆâË£Ö Docker„ÄÅÈÖçÁΩÆÁΩëÁªú‰ª£ÁêÜ</description>
      <content:encoded><![CDATA[<h2 id="steps-to-install-docker-on-ubuntu-20">steps to install docker on Ubuntu 20</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">sudo apt-get update
</span></span><span class="line"><span class="cl">sudo apt-get install apt-transport-https ca-certificates curl software-properties-common
</span></span><span class="line"><span class="cl">curl -fsSL https://download.docker.com/linux/ubuntu/gpg <span class="p">|</span> sudo apt-key add -
</span></span><span class="line"><span class="cl">sudo add-apt-repository <span class="s2">&#34;deb [arch=amd64] https://download.docker.com/linux/ubuntu </span><span class="k">$(</span>lsb_release -cs<span class="k">)</span><span class="s2"> stable&#34;</span>
</span></span><span class="line"><span class="cl">sudo apt-get update
</span></span><span class="line"><span class="cl">sudo apt-get install docker-ce
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="verify-the-installation">verify the installation</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">sudo systemctl status docker
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="add-current-user-to-docker-group">add current user to docker group</h2>
<ul>
<li>in order to avoid adding <code>sudo</code> when running docker command</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">sudo usermod -aG docker <span class="si">${</span><span class="nv">USER</span><span class="si">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="network-proxy-settings">Network proxy settings</h2>
<h3 id="dockerd-proxy">Dockerd Proxy</h3>
<p>To configure the proxy for <code>dockerd</code>, which is managed by <code>systemd</code>, create and edit a configuration file:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">sudo mkdir -p /etc/systemd/system/docker.service.d
</span></span><span class="line"><span class="cl">sudo touch /etc/systemd/system/docker.service.d/proxy.conf
</span></span></code></pre></td></tr></table>
</div>
</div><p>Add the following to <code>proxy.conf</code>:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-ini" data-lang="ini"><span class="line"><span class="cl"><span class="k">[Service]</span>
</span></span><span class="line"><span class="cl"><span class="na">Environment</span><span class="o">=</span><span class="s">&#34;HTTP_PROXY=http://proxy.example.com:8080/&#34;</span>
</span></span><span class="line"><span class="cl"><span class="na">Environment</span><span class="o">=</span><span class="s">&#34;HTTPS_PROXY=http://proxy.example.com:8080/&#34;</span>
</span></span><span class="line"><span class="cl"><span class="na">Environment</span><span class="o">=</span><span class="s">&#34;NO_PROXY=localhost,127.0.0.1,.example.com&#34;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>Replace <code>proxy.example.com:8080</code> with your proxy address.</p>
<h3 id="container-proxy">Container Proxy</h3>
<p>To configure proxy settings for containers, edit <code>~/.docker/config.json</code>:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span><span class="lnt">9
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-json" data-lang="json"><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl"> <span class="nt">&#34;proxies&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">   <span class="nt">&#34;default&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">     <span class="nt">&#34;httpProxy&#34;</span><span class="p">:</span> <span class="s2">&#34;http://proxy.example.com:8080&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">     <span class="nt">&#34;httpsProxy&#34;</span><span class="p">:</span> <span class="s2">&#34;http://proxy.example.com:8080&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">     <span class="nt">&#34;noProxy&#34;</span><span class="p">:</span> <span class="s2">&#34;localhost,127.0.0.1,.example.com&#34;</span>
</span></span><span class="line"><span class="cl">   <span class="p">}</span>
</span></span><span class="line"><span class="cl"> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>For container runtime proxies, use the <code>-e</code> option to set environment variables.</p>
<h3 id="docker-build-proxy">Docker Build Proxy</h3>
<p>For <code>docker build</code>, inject proxy settings using <code>--build-arg</code>:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">docker build . <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>    --build-arg <span class="s2">&#34;HTTP_PROXY=http://proxy.example.com:8080/&#34;</span> <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>    --build-arg <span class="s2">&#34;HTTPS_PROXY=http://proxy.example.com:8080/&#34;</span> <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>    --build-arg <span class="s2">&#34;NO_PROXY=localhost,127.0.0.1,.example.com&#34;</span> <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>    -t your/image:tag
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="applying-changes">Applying Changes</h3>
<p>To apply the changes:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">sudo systemctl daemon-reload
</span></span><span class="line"><span class="cl">sudo systemctl restart docker
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="trouble-shooting">Trouble shooting</h2>
<h3 id="when-running-command-sudo-apt-update-it-has-following-error">when running command <code>sudo apt update</code>, it has following error</h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">Err:5 https://download.docker.com/linux/ubuntu focal Release                                            
</span></span><span class="line"><span class="cl">  Could not handshake: The TLS connection was non-properly terminated. <span class="o">[</span>IP: &lt;xx.xxx.xx.xxx&gt; 3128<span class="o">]</span>
</span></span><span class="line"><span class="cl">Hit:6 http://security.ubuntu.com/ubuntu focal-security InRelease                                        
</span></span><span class="line"><span class="cl">Hit:7 http://us.archive.ubuntu.com/ubuntu focal-security InRelease
</span></span><span class="line"><span class="cl">Reading package lists... Done
</span></span><span class="line"><span class="cl">E: The repository <span class="s1">&#39;https://download.docker.com/linux/ubuntu focal Release&#39;</span> does not have a Release file.
</span></span><span class="line"><span class="cl">N: Updating from such a repository can<span class="err">&#39;</span>t be <span class="k">done</span> securely, and is therefore disabled by default.
</span></span><span class="line"><span class="cl">N: See apt-secure<span class="o">(</span>8<span class="o">)</span> manpage <span class="k">for</span> repository creation and user configuration details.
</span></span></code></pre></td></tr></table>
</div>
</div><h4 id="solution">Solution</h4>
<p>According to <a href="https://askubuntu.com/a/1289675/1578724">this answer</a>, modify <code>/etc/apt/apt.config</code> to make sure the proxy settings are correct, especially the <code>https</code> settings.</p>
<ul>
<li><strong>Wrong config:</strong></li>
</ul>
<pre tabindex="0"><code>Acquire::http::proxy &#34;http://proxy.mydom.it:8080&#34;;
Acquire::https::proxy &#34;https://proxy.mydom.it:8080&#34;;
</code></pre><ul>
<li><strong>Good config:</strong></li>
</ul>
<pre tabindex="0"><code>Acquire::http::proxy &#34;http://proxy.mydom.it:8080&#34;;
Acquire::https::proxy &#34;http://proxy.mydom.it:8080&#34;;
</code></pre>]]></content:encoded>
    </item>
    
    <item>
      <title>How to run fsck to check and fix filesystem of Ubuntu 20</title>
      <link>https://blog.tomatostore.top/posts/2023/08/how-to-run-fsck-in-ubuntu20-to-fix-filesystem/</link>
      <pubDate>Wed, 02 Aug 2023 00:00:00 +0000</pubDate>
      
      <guid>https://blog.tomatostore.top/posts/2023/08/how-to-run-fsck-in-ubuntu20-to-fix-filesystem/</guid>
      <description>/dev/sda1: UNEXPECTED INCONSISTENCY: RUN fsck MANUALLY. fsck exited with status code 4</description>
      <content:encoded><![CDATA[<p>ÂΩìÂú® <code>VMware</code> ËôöÊãüÊú∫‰∏≠ËøêË°å <code>Ubuntu 20</code> Êó∂ÔºåÊúâÊó∂ÂèØËÉΩ‰ºöÈÅáÂà∞ÂêØÂä®Êó∂Âá∫Áé∞ &ldquo;ÈúÄË¶Å fsck&rdquo; ÁöÑÈóÆÈ¢ò„ÄÇ</p>
<pre tabindex="0"><code>/dev/sda1 contains a file system with errors, check forced.
Inodes that were part of a corrupted orphan linked list found.

/dev/sda1: UNEXPECTED INCONSISTENCY: RUN fsck MANUALLY.
         (i.e., without -a or -p options)
fsck exited with status code 4
The root filesystem on /dev/sda1 requires a manual fsck

BusyBox v1.22.1 (Ubuntu 1:1.22.0-19ubuntuu2) built-in shell (ash)
Enter &#39;help&#39; for a list of built-in commands.

(initramfs)_
</code></pre><p>ËøôÊòØÁî±‰∫éÊñá‰ª∂Á≥ªÁªü <code>/dev/sda1</code> Âá∫Áé∞‰∫Ü‰∏•ÈáçÈîôËØØÊàñ‰∏ç‰∏ÄËá¥ÊÄßÔºåÈúÄË¶ÅËøêË°å <code>fsck</code>ÔºàÊñá‰ª∂Á≥ªÁªüÊ£ÄÊü•ÔºâÊù•Ëß£ÂÜ≥„ÄÇ</p>
<p>‰ª•‰∏ãÊòØËß£ÂÜ≥ÊñπÊ≥ïÁöÑÊ≠•È™§Ôºö</p>
<h2 id="1ËøõÂÖ•grub">1ÔºöËøõÂÖ•GRUB</h2>
<p>ÂêØÂä®ËôöÊãüÊú∫ÔºåÂπ∂Âú® <code>GRUB</code> ÂêØÂä®Âä†ËΩΩÂô®ËèúÂçï‰∏≠ÈÄâÊã© <code>Advanced options for Ubuntu</code>„ÄÇ
<img loading="lazy" src="/images/grub-ubuntu.png" alt="GRUB"  /></p>
<h2 id="2ËøõÂÖ•ÊÅ¢Â§çÊ®°Âºè">2ÔºöËøõÂÖ•ÊÅ¢Â§çÊ®°Âºè</h2>
<p>ÁÑ∂ÂêéÔºåÈÄâÊã©ÂΩìÂâçÂÜÖÊ†∏ÁâàÊú¨ÁöÑÊÅ¢Â§çÊ®°Âºè <code>Ubuntu, with Linux x.x.x-generic (recovery mode)</code>„ÄÇ
ËôöÊãüÊú∫Â∞ÜËøõÂÖ•ÊÅ¢Â§çÊ®°ÂºèÔºåÂπ∂ÊòæÁ§∫‰∏Ä‰∏™Â∏¶ÊúâÂ§ö‰∏™ÈÄâÈ°πÁöÑËèúÂçï„ÄÇ</p>
<h2 id="3ÈÄâÊã©-root-shell-Â¶ÇÊûúÊúâ">3ÔºöÈÄâÊã© <code>Root Shell</code> (Â¶ÇÊûúÊúâ)</h2>
<p>ÈÄâÊã©ÊÅ¢Â§çÊ®°ÂºèËèúÂçï‰∏≠ÁöÑ <code>Drop to root shell prompt</code>„ÄÇËã•Êó†Ê≠§ÈÄâÈ°πÂèØË∑≥ËøáÊ≠§Ê≠•„ÄÇ</p>
<h2 id="4Â∞ÜÊ†πÊñá‰ª∂Á≥ªÁªüÈáçÊñ∞ÊåÇËΩΩ‰∏∫ËØªÂÜô">4ÔºöÂ∞ÜÊ†πÊñá‰ª∂Á≥ªÁªüÈáçÊñ∞ÊåÇËΩΩ‰∏∫ËØªÂÜô</h2>
<p>ÊÅ¢Â§çÊ®°Âºè‰∏ãÔºåÊ†πÊñá‰ª∂Á≥ªÁªüÈÄöÂ∏∏‰ª•Âè™ËØªÊ®°ÂºèÊåÇËΩΩ„ÄÇ‰∏∫‰∫ÜËÉΩÂ§üËøêË°å fsck Âπ∂‰øÆÂ§çÊñá‰ª∂Á≥ªÁªüÔºåÊÇ®ÈúÄË¶ÅÂ∞ÜÊ†πÊñá‰ª∂Á≥ªÁªüÈáçÊñ∞ÊåÇËΩΩ‰∏∫ËØªÂÜôÊ®°ÂºèÔºö</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">mount -o remount,rw /
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="5ÊâãÂä®ËøêË°å-fsck">5ÔºöÊâãÂä®ËøêË°å <code>fsck</code></h2>
<p>Âú®Ê†πÊñá‰ª∂Á≥ªÁªü‰∏äËøêË°å fsck Êù•Ê£ÄÊü•Âíå‰øÆÂ§çÈîôËØØÔºö</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">fsck -f /dev/sda1
</span></span></code></pre></td></tr></table>
</div>
</div><ul>
<li><code>-f</code> ÈÄâÈ°πÂëäËØâ <code>fsck</code> Ë¶ÅÂº∫Âà∂ËøõË°åÊ£ÄÊü•„ÄÇ</li>
</ul>
<p>ËøêË°åÂêé‰ºöÊúâÂ§ö‰∏™ÊèêÁ§∫ÈúÄË¶ÅÊâãÂä®ËæìÂÖ•Ôºå‰∏ÄËà¨ÂÖ®ÈÉ®ÈªòËÆ§ÂõûËΩ¶Âç≥ÂèØ„ÄÇ</p>
<h2 id="6ÈáçÊñ∞ÂêØÂä®">6ÔºöÈáçÊñ∞ÂêØÂä®</h2>
<p>Âú® <code>fsck</code> ÂÆåÊàêÊ£ÄÊü•Âíå‰øÆÂ§çÂêéÔºåËæìÂÖ• <code>reboot</code> ÊàñÈÄöËøá VMWare ËèúÂçïÈáçÊñ∞ÂêØÂä®ËôöÊãüÊú∫„ÄÇ</p>
]]></content:encoded>
    </item>
    
  </channel>
</rss>
